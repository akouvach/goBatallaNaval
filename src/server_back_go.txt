package main

import (
	"fmt"
	"io/ioutil"
	"log"
	"os"

	"github.com/gin-gonic/contrib/static"
	"github.com/gin-gonic/gin"
)

// HomePage es la pagina inicial
func HomePage(c *gin.Context) {
	c.JSON(200, gin.H{
		"message": "Hello, world.",
	})
}

func handleError(err error) {
	if err != nil {
		log.Panic(err.Error())

	}

}

// PostData es para probar como enviar datos a traves del body
func PostData(c *gin.Context) {
	body := c.Request.Body
	value, err := ioutil.ReadAll(body)
	handleError(err)
	c.JSON(200, gin.H{
		"message": string(value),
	})
}

// QueryStrings es la pagina inicial
func QueryStrings(c *gin.Context) {
	name := c.Query("name")
	age := c.Query("age")
	c.JSON(200, gin.H{
		"name": name,
		"age":  age,
	})
}

// Path es la pagina inicial
func Path(c *gin.Context) {
	name := c.Param("name")
	age := c.Param("age")
	c.JSON(200, gin.H{
		"name": name,
		"age":  age,
	})
}

func main() {
	port := os.Getenv("PORT")

	if port == "" {
		log.Fatal("$PORT must be set")
	}
	// http.Handle("/", http.FileServer(http.Dir("./../static")))

	r := gin.Default()
	r.Use(static.Serve("../static/", static.LocalFile("html", false)))
	r.GET("/", HomePage)
	r.POST("/", PostData)
	r.GET("/query", QueryStrings)
	r.GET("/path/:name/:age", Path)
	fmt.Printf("Iniciando server en puerto %v \n", port)
	r.Run()
}
